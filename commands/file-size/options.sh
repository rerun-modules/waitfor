# Generated by stubbs:add-option. Do not edit, if using stubbs.
# Created: Wed Mar 16 09:10:50 PDT 2016
#
#/ usage: waitfor:file-size  --file <>  --interval <30>  --maxtry <10>  --bytes <> 

# _rerun_options_parse_ - Parse the command arguments and set option variables.
#
#     rerun_options_parse "$@"
#
# Arguments:
#
# * the command options and their arguments
#
# Notes:
# 
# * Sets shell variables for any parsed options.
# * The "-?" help argument prints command usage and will exit 2.
# * Return 0 for successful option parse.
#
rerun_options_parse() {

    while (( "$#" > 0 ))
    do
        OPT="$1"
        case "$OPT" in
            --file) rerun_option_check $# $1; FILE=$2 ; shift ;;
            --interval) rerun_option_check $# $1; INTERVAL=$2 ; shift ;;
            --maxtry) rerun_option_check $# $1; MAXTRY=$2 ; shift ;;
            --bytes) rerun_option_check $# $1; BYTES=$2 ; shift ;;
            # help option
            -|--*?) echo >&2 "unrecognized option: $OPT"
                rerun_option_usage
                exit 2
                ;;
            # end of options, just arguments left
            *)
              break
        esac
        shift
    done

    # Set defaultable options.
    [[ -z "$INTERVAL" ]] && INTERVAL="$(rerun_property_get $RERUN_MODULE_DIR/options/interval DEFAULT)"
    [[ -z "$MAXTRY" ]] && MAXTRY="$(rerun_property_get $RERUN_MODULE_DIR/options/maxtry DEFAULT)"
    # Check required options are set
    [[ -z "$FILE" ]] && { echo >&2 "missing required option: --file" ; return 2 ; }
    [[ -z "$INTERVAL" ]] && { echo >&2 "missing required option: --interval" ; return 2 ; }
    [[ -z "$MAXTRY" ]] && { echo >&2 "missing required option: --maxtry" ; return 2 ; }
    [[ -z "$BYTES" ]] && { echo >&2 "missing required option: --bytes" ; return 2 ; }
    # If option variables are declared exportable, export them.

    #
    return 0
}


# If not already set, initialize the options variables to null.
: ${FILE:=}
: ${INTERVAL:=}
: ${MAXTRY:=}
: ${BYTES:=}


