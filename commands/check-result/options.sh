# Generated by stubbs:add-option. Do not edit, if using stubbs.
# Created: Thu Oct 19 13:50:34 CDT 2017
#
#/ usage: waitfor:check-result  --interval <30>  --maxtry <10>  --check <>  --result <>  --negative <false> 

# _rerun_options_parse_ - Parse the command arguments and set option variables.
#
#     rerun_options_parse "$@"
#
# Arguments:
#
# * the command options and their arguments
#
# Notes:
#
# * Sets shell variables for any parsed options.
# * The "-?" help argument prints command usage and will exit 2.
# * Return 0 for successful option parse.
#
rerun_options_parse() {
  
    unrecognized_args=()

    while (( "$#" > 0 ))
    do
        OPT="$1"
        case "$OPT" in
            --interval) rerun_option_check $# $1; INTERVAL=$2 ; shift 2 ;;
            --maxtry) rerun_option_check $# $1; MAXTRY=$2 ; shift 2 ;;
            --check) rerun_option_check $# $1; CHECK=$2 ; shift 2 ;;
            --result) rerun_option_check $# $1; RESULT=$2 ; shift 2 ;;
            --negative) rerun_option_check $# $1; NEGATIVE=$2 ; shift 2 ;;
            # help option
            -\?|--help)
                rerun_option_usage
                exit 2
                ;;
            # unrecognized arguments
            *)
              unrecognized_args+=("$OPT")
              shift
              ;;
        esac
    done

    # Set defaultable options.
    [[ -z "$INTERVAL" ]] && INTERVAL="$(rerun_property_get $RERUN_MODULE_DIR/options/interval DEFAULT)"
    [[ -z "$MAXTRY" ]] && MAXTRY="$(rerun_property_get $RERUN_MODULE_DIR/options/maxtry DEFAULT)"
    [[ -z "$NEGATIVE" ]] && NEGATIVE="$(rerun_property_get $RERUN_MODULE_DIR/options/negative DEFAULT)"
    # Check required options are set
    [[ -z "$INTERVAL" ]] && { echo >&2 "missing required option: --interval" ; return 2 ; }
    [[ -z "$MAXTRY" ]] && { echo >&2 "missing required option: --maxtry" ; return 2 ; }
    [[ -z "$CHECK" ]] && { echo >&2 "missing required option: --check" ; return 2 ; }
    [[ -z "$RESULT" ]] && { echo >&2 "missing required option: --result" ; return 2 ; }
    [[ -z "$NEGATIVE" ]] && { echo >&2 "missing required option: --negative" ; return 2 ; }
    # If option variables are declared exportable, export them.

    # Make unrecognized command line options available in $_CMD_LINE
    if [ ${#unrecognized_args[@]} -gt 0 ]; then
      export _CMD_LINE="${unrecognized_args[@]}"
    fi
    #
    return 0
}


# If not already set, initialize the options variables to null.
: ${INTERVAL:=}
: ${MAXTRY:=}
: ${CHECK:=}
: ${RESULT:=}
: ${NEGATIVE:=}
# Default command line to null if not set
: ${_CMD_LINE:=}


