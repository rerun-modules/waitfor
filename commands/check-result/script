#!/usr/bin/env bash

#/ command: waitfor:check-result: "wait for the check return the result"
#/ usage: rerun waitfor:check-result  --interval <30>  --maxtry <10>  --check <>  --result <>  --negative <false> 
#/ rerun-variables: RERUN, RERUN_VERSION, RERUN_MODULES, RERUN_MODULE_DIR
#/ option-variables: INTERVAL MAXTRY CHECK RESULT NEGATIVE

. "$RERUN_MODULE_DIR/lib/functions.sh" check-result || { 
  echo >&2 "Failed loading function library." ; exit 1 ; 
}

set -o errexit -o nounset -o pipefail

rerun_options_parse "$@"


# Command implementation
# ----------------------

NEGATIVE=$(echo "${NEGATIVE}" | tr '[:upper:]' '[:lower:]')
[[ "${NEGATIVE}" = "true" ]] || NEGATIVE=false
declare -i count=0 max=${MAXTRY} sleep=${INTERVAL}

# Keep checking for pattern until we reach max.
while (( count <= max ))
do
    # if success break else print a . and do another loop
    result_check=$(eval "${CHECK}")
    if [[ "${NEGATIVE}" == "false" ]]
    then
        [[ "${result_check}" == "${RESULT}" ]] && break || printf >&2 "."
    else
        [[ "${result_check}" != "${RESULT}" ]] && break || printf >&2 "."
    fi
    # increment attempts counter.
    (( count += 1 ))

    # error out if reached max attempts.
    (( count == max )) && {
        rerun_die 1 "FAIL: Reached max attempts to wait the correct result ${RESULT}. Exiting."
    }
    # wait interval before trying again.
    sleep "${sleep}"
done

# Done. Exit with last command exit status.
exit $?

